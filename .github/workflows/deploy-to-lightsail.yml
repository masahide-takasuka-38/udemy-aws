name: Deploy to AWS Lightsail

on:
  push:
    branches: 
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Test AWS connection
        run: |
          echo "Testing AWS connection..."
          aws sts get-caller-identity

      - name: Check if service exists
        id: check-service
        run: |
          if aws lightsail get-container-services --service-name streamlit-app --region ap-northeast-1 >/dev/null 2>&1; then
            echo "exists=true" >> \$GITHUB_OUTPUT
          else
            echo "exists=false" >> \$GITHUB_OUTPUT
          fi

      - name: Create service if needed
        if: steps.check-service.outputs.exists == 'false'
        run: |
          aws lightsail create-container-service --service-name streamlit-app --power small --scale 1 --region ap-northeast-1
          sleep 60

      - name: Build and deploy
        run: |
          docker build -t myapp .
          aws lightsail push-container-image --service-name streamlit-app --label app --image myapp --region ap-northeast-1
          aws lightsail create-container-service-deployment --service-name streamlit-app --region ap-northeast-1 --containers '{"app":{"image":":streamlit-app.app.'\$GITHUB_RUN_NUMBER'","ports":{"8501":"HTTP"}}}' --public-endpoint '{"containerName":"app","containerPort":8501}'

      - name: Get service URL
        run: |
          sleep 60
          aws lightsail get-container-services --service-name streamlit-app --region ap-northeast-1 --query 'containerServices[0].url' --output text
